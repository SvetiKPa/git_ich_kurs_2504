# Простое число
# Напишите функцию, которая проверяет, является ли число n простым (делится только на 1 и само себя) и возвращает булевый результат.
# Данные:
# n = 17
# Пример вывода:
# Число 17 является простым
n = 17

def check_easy_num(n):
    if n < 2 or n % 2 == 0:
        return 0
    else:
        count = 0
        for i in range(2, n + 1):
            if n % i == 0:
                count += 1
                if count >= 2: return 0
                else:          return 1
print(f"Число 17 является простым {}"check_easy_num(n))


# Фильтрация чисел по чётности
# Напишите функцию, которая принимает filter_type ("even" или "odd") и произвольное количество чисел, возвращая только те, которые соответствуют фильтру.
# Пример вызова:
# print(filter_numbers("even", 1, 2, 3, 4, 5, 6))
# print(filter_numbers("odd", 10, 15, 20, 25))
# print(filter_numbers("prime", 2, 3, 5, 7))
# Пример вывода:
# [2, 4, 6]
# [15, 25]
# Некорректный фильтр




# Объединение словарей
# Напишите функцию, которая принимает любое количество словарей и объединяет их в один. Если ключи повторяются, используется значение из последнего словаря.
# Данные:
# dict1 = {"a": 1, "b": 2}
# dict2 = {"b": 3, "c": 4}
# dict3 = {"d": 5}
# Пример вызова:
# print(merge_dicts(dict1, dict2, dict3))
# Пример вывода:
# {'a': 1, 'b': 3, 'c': 4, 'd': 5}