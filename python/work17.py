# Проверка на подмножество
# Напишите программу, которая проверяет, содержит ли первое множество все элементы второго множества.
# Реализуйте решение несколькими способами. Решите одним из способов не используя возможности множеств.
# Данные:

set1 = {1, 2, 3, 4}
set2 = {2, 3}
rez = set1.issuperset(set2)
print("Первое множество содержит все элементы второго множества ", rez)


list2 = list(set2)
list1 = list(set1)
rez = True
for i in list2:
    if i not in list1:
        rez = False
        break
print("Первое множество содержит все элементы второго множества ", rez)




# Зеркальное подмножество
# Напишите программу, которая проверяет, являются ли элементы одного из множеств подмножеством другого.
# В случае положительного ответа возвращает разницу между двумя множествами. Проверить необходимо в обе стороны.
# Данные:
# Пример вывода:
# Подмножество: True
# Разница: {2, 3, 6}
set1 = {2, 3, 4, 5, 6}
set2 = {4, 5}
print(f"Подмножество {set2} является подмножеством {set1}: {set2 <= set1}")
print(f"Подмножество {set2} является подмножеством {set1}: {set2.issubset(set1)}")  #ok
print(f"Подмножество {set1} является подмножеством {set2}: {set1.issubset(set2)}")  #ok
print(f"Подмножество {set2} является надмножеством (полное совпадение) {set1}: {set2.issuperset(set1)}")
print(f"Подмножество {set1} является надмножеством (полное совпадение) {set2}: {set1>=set2}")
if set2 <= set1 :
    print(f"Разница между двумя множествами {set1} и {set2} равна : {set1 - set2}" )
else:
    print(f"Разница между двумя множествами {set2} и {set1} равна : {set2 - set1}" )