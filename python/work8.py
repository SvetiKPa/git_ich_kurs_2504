# Проверка кодировки
# Напишите программу, которая принимает от пользователя один символ и выводит его код в таблице Unicode и его
# принадлежность к диапазону ASCII (True/False).
a = str(input("Введите символ: "))
print("код в таблице Unicode ", ord(a))
if ord(a) <= 127: print("диапазон ASCII: ", bool(1))
else: print("диапазон ASCII: ", bool(0))

# Подстрока с заполнением
# Напишите программу, которая принимает строку и индексы начала и конца. Программа должна вывести подстроку на указанных позициях.
# Также если конечный индекс выходит за пределы строки, программа заполняет недостающие символы символами _.

str = str(input("Введите строку: "))
l   = len(str)
count = 0
i1  = int(input("Введите начальный индекс: "))
i2  = int(input("Введите конечный индекс: "))
if i2-l > 0: count = i2 - l
#print(count, '-'*count)
if i1 < i2 : print("Результат вырезки с ", i1, " по ", i2,  str[i1:i2], '-'*count)
else:        print('Введите корректное значение (первый индекс < второго)' )

# Подсчёт символа
# Напишите программу, которая принимает строку и символ, а затем подсчитывает, сколько раз символ встречается в строке.
str1 = str(input("Введите строку: "))
a    = str(input("Введите символ: "))
l    = len(str1)
count = itog = 0
while l > 0:
    if str1[count] == a: itog += 1
    l -= 1
    count += 1
print("Символ ", a, " встречается ", itog, "раз(а)")

# Инвертирование строки без цифр
# Напишите программу, которая принимает строку и выводит её в обратном порядке, пропуская все цифры.
str1 = str(input("Введите строку: "))
l   = len(str1)
#print(str1[-1:0:-1], str1[0], sep="")
new = ''
while l > 0:
    if ord(str1[l-1]) < 48 or ord(str1[l-1]) > 57:
        new += str1[l-1]
    l -= 1
print("Инвертирование строки без цифр: ", new)